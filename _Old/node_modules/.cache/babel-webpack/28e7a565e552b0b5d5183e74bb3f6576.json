{"ast":null,"code":"import _classCallCheck from \"C:/git/sportspip/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/git/sportspip/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport * as Plyr from 'plyr';\nimport { __decorate, __metadata } from 'tslib';\nimport { ElementRef, NgZone, Renderer2, Input, ViewChild, Output, Component, NgModule } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { filter, first, switchMap } from 'rxjs/operators';\nimport * as ɵngcc0 from '@angular/core';\nvar _c0 = [\"v\"];\n\nvar DefaultPlyrDriver = /*#__PURE__*/function () {\n  function DefaultPlyrDriver() {\n    _classCallCheck(this, DefaultPlyrDriver);\n  }\n\n  _createClass(DefaultPlyrDriver, [{\n    key: \"create\",\n    value: function create(params) {\n      return new Plyr(params.videoElement, params.options);\n    }\n  }, {\n    key: \"updateSource\",\n    value: function updateSource(params) {\n      params.plyr.source = params.source;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(params) {\n      params.plyr.destroy();\n    }\n  }]);\n\n  return DefaultPlyrDriver;\n}();\n\nvar PlyrComponent = /*#__PURE__*/function () {\n  function PlyrComponent(elementRef, ngZone, renderer) {\n    _classCallCheck(this, PlyrComponent);\n\n    this.elementRef = elementRef;\n    this.ngZone = ngZone;\n    this.renderer = renderer;\n    this.playerChange = new BehaviorSubject(null);\n    this.events = new Map();\n    this.plyrType = 'video'; // ngx-plyr events\n\n    this.plyrInit = this.playerChange.pipe(filter(function (player) {\n      return !!player;\n    })); // standard media events\n\n    this.plyrProgress = this.createLazyEvent('progress');\n    this.plyrPlaying = this.createLazyEvent('playing');\n    this.plyrPlay = this.createLazyEvent('play');\n    this.plyrPause = this.createLazyEvent('pause');\n    this.plyrTimeUpdate = this.createLazyEvent('timeupdate');\n    this.plyrVolumeChange = this.createLazyEvent('volumechange');\n    this.plyrSeeking = this.createLazyEvent('seeking');\n    this.plyrSeeked = this.createLazyEvent('seeked');\n    this.plyrRateChange = this.createLazyEvent('ratechange');\n    this.plyrEnded = this.createLazyEvent('ended');\n    this.plyrEnterFullScreen = this.createLazyEvent('enterfullscreen');\n    this.plyrExitFullScreen = this.createLazyEvent('exitfullscreen');\n    this.plyrCaptionsEnabled = this.createLazyEvent('captionsenabled');\n    this.plyrCaptionsDisabled = this.createLazyEvent('captionsdisabled');\n    this.plyrLanguageChange = this.createLazyEvent('languagechange');\n    this.plyrControlsHidden = this.createLazyEvent('controlshidden');\n    this.plyrControlsShown = this.createLazyEvent('controlsshown');\n    this.plyrReady = this.createLazyEvent('ready'); // HTML5 events\n\n    this.plyrLoadStart = this.createLazyEvent('loadstart');\n    this.plyrLoadedData = this.createLazyEvent('loadeddata');\n    this.plyrLoadedMetadata = this.createLazyEvent('loadedmetadata');\n    this.plyrQualityChange = this.createLazyEvent('qualitychange');\n    this.plyrCanPlay = this.createLazyEvent('canplay');\n    this.plyrCanPlayThrough = this.createLazyEvent('canplaythrough');\n    this.plyrStalled = this.createLazyEvent('stalled');\n    this.plyrWaiting = this.createLazyEvent('waiting');\n    this.plyrEmptied = this.createLazyEvent('emptied');\n    this.plyrCueChange = this.createLazyEvent('cuechange');\n    this.plyrError = this.createLazyEvent('error'); // YouTube events\n\n    this.plyrStateChange = this.createLazyEvent('statechange');\n    this.subscriptions = [];\n  }\n\n  _createClass(PlyrComponent, [{\n    key: \"player\",\n    get: function get() {\n      return this.playerChange.getValue();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var _this = this;\n\n      this.subscriptions.push(this.plyrInit.pipe(first()).subscribe(function (player) {\n        var reinitTriggers = [changes.plyrOptions, changes.plyrPlaysInline, changes.plyrCrossOrigin].filter(function (t) {\n          return !!t;\n        });\n\n        if (reinitTriggers.length) {\n          if (reinitTriggers.some(function (t) {\n            return !t.firstChange;\n          })) {\n            _this.initPlyr(true);\n          }\n        } else {\n          _this.updatePlyrSource(player);\n        }\n      }));\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroyPlayer();\n      this.subscriptions.forEach(function (s) {\n        return s.unsubscribe();\n      });\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.initPlyr();\n    }\n  }, {\n    key: \"initPlyr\",\n    value: function initPlyr() {\n      var _this2 = this;\n\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (force || !this.player) {\n        this.ngZone.runOutsideAngular(function () {\n          _this2.destroyPlayer();\n\n          _this2.driver = _this2.plyrDriver || new DefaultPlyrDriver();\n\n          _this2.ensureVideoElement();\n\n          var newPlayer = _this2.driver.create({\n            videoElement: _this2.videoElement,\n            options: _this2.plyrOptions\n          });\n\n          _this2.updatePlyrSource(newPlayer);\n\n          _this2.playerChange.next(newPlayer);\n        });\n      }\n    }\n  }, {\n    key: \"updatePlyrSource\",\n    value: function updatePlyrSource(plyr) {\n      this.driver.updateSource({\n        videoElement: this.videoElement,\n        plyr: plyr,\n        source: {\n          type: this.plyrType,\n          title: this.plyrTitle,\n          sources: this.plyrSources,\n          poster: this.plyrPoster,\n          tracks: this.plyrTracks\n        }\n      });\n    } // see https://stackoverflow.com/a/53704102/1990451\n\n  }, {\n    key: \"createLazyEvent\",\n    value: function createLazyEvent(name) {\n      var _this3 = this;\n\n      return this.plyrInit.pipe(switchMap(function () {\n        return new Observable(function (observer) {\n          return _this3.on(name, function (data) {\n            return _this3.ngZone.run(function () {\n              return observer.next(data);\n            });\n          });\n        });\n      }));\n    }\n  }, {\n    key: \"destroyPlayer\",\n    value: function destroyPlayer() {\n      var _this4 = this;\n\n      if (this.player) {\n        Array.from(this.events.keys()).forEach(function (name) {\n          return _this4.off(name);\n        });\n        this.driver.destroy({\n          plyr: this.player\n        });\n        this.videoElement = null;\n      }\n    }\n  }, {\n    key: \"hostElement\",\n    get: function get() {\n      return this.elementRef.nativeElement;\n    } // this method is required because the plyr inserts clone of the original element on destroy\n    // so we catch the clone element right here and reuse it\n\n  }, {\n    key: \"ensureVideoElement\",\n    value: function ensureVideoElement() {\n      var videoElement = this.hostElement.querySelector('video');\n\n      if (videoElement) {\n        this.videoElement = videoElement;\n      } else {\n        this.videoElement = this.renderer.createElement('video');\n        this.videoElement.controls = true;\n\n        if (this.plyrCrossOrigin) {\n          this.videoElement.setAttribute('crossorigin', '');\n        }\n\n        if (this.plyrPlaysInline) {\n          this.videoElement.setAttribute('playsinline', '');\n        }\n\n        this.renderer.appendChild(this.hostElement, this.videoElement);\n      }\n    }\n  }, {\n    key: \"on\",\n    value: function on(name, handler) {\n      this.events.set(name, handler);\n      this.player.on(name, handler);\n    }\n  }, {\n    key: \"off\",\n    value: function off(name) {\n      this.player.off(name, this.events.get(name));\n      this.events.delete(name);\n    }\n  }]);\n\n  return PlyrComponent;\n}();\n\nPlyrComponent.ɵfac = function PlyrComponent_Factory(t) {\n  return new (t || PlyrComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n};\n\nPlyrComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: PlyrComponent,\n  selectors: [[\"plyr\"], [\"\", \"plyr\", \"\"]],\n  viewQuery: function PlyrComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.vr = _t.first);\n    }\n  },\n  inputs: {\n    plyrType: \"plyrType\",\n    plyrDriver: \"plyrDriver\",\n    plyrTitle: \"plyrTitle\",\n    plyrPoster: \"plyrPoster\",\n    plyrSources: \"plyrSources\",\n    plyrTracks: \"plyrTracks\",\n    plyrOptions: \"plyrOptions\",\n    plyrCrossOrigin: \"plyrCrossOrigin\",\n    plyrPlaysInline: \"plyrPlaysInline\"\n  },\n  outputs: {\n    plyrInit: \"plyrInit\",\n    plyrProgress: \"plyrProgress\",\n    plyrPlaying: \"plyrPlaying\",\n    plyrPlay: \"plyrPlay\",\n    plyrPause: \"plyrPause\",\n    plyrTimeUpdate: \"plyrTimeUpdate\",\n    plyrVolumeChange: \"plyrVolumeChange\",\n    plyrSeeking: \"plyrSeeking\",\n    plyrSeeked: \"plyrSeeked\",\n    plyrRateChange: \"plyrRateChange\",\n    plyrEnded: \"plyrEnded\",\n    plyrEnterFullScreen: \"plyrEnterFullScreen\",\n    plyrExitFullScreen: \"plyrExitFullScreen\",\n    plyrCaptionsEnabled: \"plyrCaptionsEnabled\",\n    plyrCaptionsDisabled: \"plyrCaptionsDisabled\",\n    plyrLanguageChange: \"plyrLanguageChange\",\n    plyrControlsHidden: \"plyrControlsHidden\",\n    plyrControlsShown: \"plyrControlsShown\",\n    plyrReady: \"plyrReady\",\n    plyrLoadStart: \"plyrLoadStart\",\n    plyrLoadedData: \"plyrLoadedData\",\n    plyrLoadedMetadata: \"plyrLoadedMetadata\",\n    plyrQualityChange: \"plyrQualityChange\",\n    plyrCanPlay: \"plyrCanPlay\",\n    plyrCanPlayThrough: \"plyrCanPlayThrough\",\n    plyrStalled: \"plyrStalled\",\n    plyrWaiting: \"plyrWaiting\",\n    plyrEmptied: \"plyrEmptied\",\n    plyrCueChange: \"plyrCueChange\",\n    plyrError: \"plyrError\",\n    plyrStateChange: \"plyrStateChange\"\n  },\n  exportAs: [\"plyr\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 0,\n  vars: 0,\n  template: function PlyrComponent_Template(rf, ctx) {},\n  styles: [\"\"]\n});\n\nPlyrComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: Renderer2\n  }];\n};\n\n__decorate([Input(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrDriver\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], PlyrComponent.prototype, \"plyrType\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], PlyrComponent.prototype, \"plyrTitle\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], PlyrComponent.prototype, \"plyrPoster\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Array)], PlyrComponent.prototype, \"plyrSources\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Array)], PlyrComponent.prototype, \"plyrTracks\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrOptions\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], PlyrComponent.prototype, \"plyrCrossOrigin\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], PlyrComponent.prototype, \"plyrPlaysInline\", void 0);\n\n__decorate([ViewChild('v'), __metadata(\"design:type\", ElementRef)], PlyrComponent.prototype, \"vr\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrInit\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrProgress\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrPlaying\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrPlay\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrPause\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrTimeUpdate\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrVolumeChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrSeeking\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrSeeked\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrRateChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrEnded\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrEnterFullScreen\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrExitFullScreen\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrCaptionsEnabled\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrCaptionsDisabled\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrLanguageChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrControlsHidden\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrControlsShown\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrReady\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrLoadStart\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrLoadedData\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrLoadedMetadata\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrQualityChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrCanPlay\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrCanPlayThrough\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrStalled\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrWaiting\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrEmptied\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrCueChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrError\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], PlyrComponent.prototype, \"plyrStateChange\", void 0);\n\nPlyrComponent = __decorate([__metadata(\"design:paramtypes\", [ElementRef, NgZone, Renderer2])], PlyrComponent);\n\nvar PlyrModule = function PlyrModule() {\n  _classCallCheck(this, PlyrModule);\n};\n\nPlyrModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: PlyrModule\n});\nPlyrModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function PlyrModule_Factory(t) {\n    return new (t || PlyrModule)();\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PlyrComponent, [{\n    type: Component,\n    args: [{\n      selector: 'plyr, [plyr]',\n      template: \"\",\n      exportAs: 'plyr',\n      styles: [\"\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.Renderer2\n    }];\n  }, {\n    plyrType: [{\n      type: Input\n    }],\n    plyrInit: [{\n      type: Output\n    }],\n    plyrProgress: [{\n      type: Output\n    }],\n    plyrPlaying: [{\n      type: Output\n    }],\n    plyrPlay: [{\n      type: Output\n    }],\n    plyrPause: [{\n      type: Output\n    }],\n    plyrTimeUpdate: [{\n      type: Output\n    }],\n    plyrVolumeChange: [{\n      type: Output\n    }],\n    plyrSeeking: [{\n      type: Output\n    }],\n    plyrSeeked: [{\n      type: Output\n    }],\n    plyrRateChange: [{\n      type: Output\n    }],\n    plyrEnded: [{\n      type: Output\n    }],\n    plyrEnterFullScreen: [{\n      type: Output\n    }],\n    plyrExitFullScreen: [{\n      type: Output\n    }],\n    plyrCaptionsEnabled: [{\n      type: Output\n    }],\n    plyrCaptionsDisabled: [{\n      type: Output\n    }],\n    plyrLanguageChange: [{\n      type: Output\n    }],\n    plyrControlsHidden: [{\n      type: Output\n    }],\n    plyrControlsShown: [{\n      type: Output\n    }],\n    plyrReady: [{\n      type: Output\n    }],\n    plyrLoadStart: [{\n      type: Output\n    }],\n    plyrLoadedData: [{\n      type: Output\n    }],\n    plyrLoadedMetadata: [{\n      type: Output\n    }],\n    plyrQualityChange: [{\n      type: Output\n    }],\n    plyrCanPlay: [{\n      type: Output\n    }],\n    plyrCanPlayThrough: [{\n      type: Output\n    }],\n    plyrStalled: [{\n      type: Output\n    }],\n    plyrWaiting: [{\n      type: Output\n    }],\n    plyrEmptied: [{\n      type: Output\n    }],\n    plyrCueChange: [{\n      type: Output\n    }],\n    plyrError: [{\n      type: Output\n    }],\n    plyrStateChange: [{\n      type: Output\n    }],\n    plyrDriver: [{\n      type: Input\n    }],\n    plyrTitle: [{\n      type: Input\n    }],\n    plyrPoster: [{\n      type: Input\n    }],\n    plyrSources: [{\n      type: Input\n    }],\n    plyrTracks: [{\n      type: Input\n    }],\n    plyrOptions: [{\n      type: Input\n    }],\n    plyrCrossOrigin: [{\n      type: Input\n    }],\n    plyrPlaysInline: [{\n      type: Input\n    }],\n    vr: [{\n      type: ViewChild,\n      args: ['v']\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PlyrModule, {\n    declarations: [PlyrComponent],\n    exports: [PlyrComponent]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PlyrModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [PlyrComponent],\n      exports: [PlyrComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DefaultPlyrDriver, PlyrComponent, PlyrModule };","map":{"version":3,"sources":["ngx-plyr/lib/plyr-driver/default-plyr-driver.ts","ngx-plyr/lib/plyr/plyr.component.ts","ngx-plyr/lib/plyr.module.ts","ngx-plyr/ngx-plyr.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Plyr from 'plyr';\nimport { PlyrDriver, PlyrDriverCreateParams, PlyrDriverDestroyParams, PlyrDriverUpdateSourceParams } from './plyr-driver';\n\nexport class DefaultPlyrDriver implements PlyrDriver {\n\n  create(params: PlyrDriverCreateParams) {\n    return new Plyr(params.videoElement, params.options);\n  }\n\n  updateSource(params: PlyrDriverUpdateSourceParams) {\n    params.plyr.source = params.source;\n  }\n\n  destroy(params: PlyrDriverDestroyParams) {\n    params.plyr.destroy();\n  }\n\n}\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, NgZone, OnChanges, OnDestroy, Output, Renderer2, SimpleChange, ViewChild } from '@angular/core';\nimport * as Plyr from 'plyr';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { filter, first, switchMap } from 'rxjs/operators';\nimport { DefaultPlyrDriver } from '../plyr-driver/default-plyr-driver';\nimport { PlyrDriver } from '../plyr-driver/plyr-driver';\n\n@Component({\n  selector: 'plyr, [plyr]', // tslint:disable-line\n  templateUrl: './plyr.component.html',\n  styleUrls: ['./plyr.component.css'],\n  exportAs: 'plyr'\n})\nexport class PlyrComponent implements AfterViewInit, OnChanges, OnDestroy {\n\n  private playerChange = new BehaviorSubject<Plyr>(null);\n\n  get player(): Plyr {\n    return this.playerChange.getValue();\n  }\n\n  private events = new Map();\n\n  @Input() plyrDriver: PlyrDriver;\n\n  @Input() plyrType: Plyr.MediaType = 'video';\n\n  @Input() plyrTitle: string;\n\n  @Input() plyrPoster: string;\n\n  @Input() plyrSources: Plyr.Source[];\n\n  @Input() plyrTracks: Plyr.Track[];\n\n  @Input() plyrOptions: Plyr.Options;\n\n  @Input() plyrCrossOrigin: boolean;\n\n  @Input() plyrPlaysInline: boolean;\n\n  @ViewChild('v') private vr: ElementRef;\n\n  // ngx-plyr events\n  @Output() plyrInit = this.playerChange.pipe(filter(player => !!player)) as EventEmitter<Plyr>;\n\n  // standard media events\n  @Output() plyrProgress = this.createLazyEvent('progress');\n  @Output() plyrPlaying = this.createLazyEvent('playing');\n  @Output() plyrPlay = this.createLazyEvent('play');\n  @Output() plyrPause = this.createLazyEvent('pause');\n  @Output() plyrTimeUpdate = this.createLazyEvent('timeupdate');\n  @Output() plyrVolumeChange = this.createLazyEvent('volumechange');\n  @Output() plyrSeeking = this.createLazyEvent('seeking');\n  @Output() plyrSeeked = this.createLazyEvent('seeked');\n  @Output() plyrRateChange = this.createLazyEvent('ratechange');\n  @Output() plyrEnded = this.createLazyEvent('ended');\n  @Output() plyrEnterFullScreen = this.createLazyEvent('enterfullscreen');\n  @Output() plyrExitFullScreen = this.createLazyEvent('exitfullscreen');\n  @Output() plyrCaptionsEnabled = this.createLazyEvent('captionsenabled');\n  @Output() plyrCaptionsDisabled = this.createLazyEvent('captionsdisabled');\n  @Output() plyrLanguageChange = this.createLazyEvent('languagechange');\n  @Output() plyrControlsHidden = this.createLazyEvent('controlshidden');\n  @Output() plyrControlsShown = this.createLazyEvent('controlsshown');\n  @Output() plyrReady = this.createLazyEvent('ready');\n\n  // HTML5 events\n  @Output() plyrLoadStart = this.createLazyEvent('loadstart');\n  @Output() plyrLoadedData = this.createLazyEvent('loadeddata');\n  @Output() plyrLoadedMetadata = this.createLazyEvent('loadedmetadata');\n  @Output() plyrQualityChange = this.createLazyEvent('qualitychange');\n  @Output() plyrCanPlay = this.createLazyEvent('canplay');\n  @Output() plyrCanPlayThrough = this.createLazyEvent('canplaythrough');\n  @Output() plyrStalled = this.createLazyEvent('stalled');\n  @Output() plyrWaiting = this.createLazyEvent('waiting');\n  @Output() plyrEmptied = this.createLazyEvent('emptied');\n  @Output() plyrCueChange = this.createLazyEvent('cuechange');\n  @Output() plyrError = this.createLazyEvent('error');\n\n  // YouTube events\n  @Output() plyrStateChange = this.createLazyEvent('statechange');\n\n  private subscriptions: Subscription[] = [];\n\n  private driver: PlyrDriver;\n\n  private videoElement: HTMLVideoElement;\n\n  constructor(\n    private elementRef: ElementRef<HTMLDivElement>,\n    private ngZone: NgZone,\n    private renderer: Renderer2,\n  ) {\n  }\n\n  ngOnChanges(changes: { [p in keyof PlyrComponent]?: SimpleChange; }) {\n    this.subscriptions.push(this.plyrInit.pipe(first()).subscribe((player: Plyr) => {\n      const reinitTriggers = [changes.plyrOptions, changes.plyrPlaysInline, changes.plyrCrossOrigin].filter(t => !!t);\n\n      if (reinitTriggers.length) {\n        if (reinitTriggers.some(t => !t.firstChange)) {\n          this.initPlyr(true);\n        }\n      } else {\n        this.updatePlyrSource(player);\n      }\n    }));\n  }\n\n  ngOnDestroy() {\n    this.destroyPlayer();\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  ngAfterViewInit() {\n    this.initPlyr();\n  }\n\n  private initPlyr(force = false) {\n    if (force || !this.player) {\n      this.ngZone.runOutsideAngular(() => {\n        this.destroyPlayer();\n\n        this.driver = this.plyrDriver || new DefaultPlyrDriver();\n\n        this.ensureVideoElement();\n\n        const newPlayer = this.driver.create({\n          videoElement: this.videoElement,\n          options: this.plyrOptions,\n        });\n\n        this.updatePlyrSource(newPlayer);\n\n        this.playerChange.next(newPlayer);\n      });\n    }\n  }\n\n  private updatePlyrSource(plyr: Plyr) {\n    this.driver.updateSource({\n      videoElement: this.videoElement,\n      plyr,\n      source: {\n        type: this.plyrType,\n        title: this.plyrTitle,\n        sources: this.plyrSources,\n        poster: this.plyrPoster,\n        tracks: this.plyrTracks,\n      },\n    });\n  }\n\n  // see https://stackoverflow.com/a/53704102/1990451\n  private createLazyEvent<T extends Plyr.PlyrEvent>(name: Plyr.StandardEvent | Plyr.Html5Event | Plyr.YoutubeEvent): EventEmitter<T> {\n    return this.plyrInit.pipe(\n      switchMap(() => new Observable(observer => this.on(name, (data: T) => this.ngZone.run(() => observer.next(data)))))\n    ) as EventEmitter<T>;\n  }\n\n  private destroyPlayer() {\n    if (this.player) {\n      Array.from(this.events.keys()).forEach(name => this.off(name));\n\n      this.driver.destroy({\n        plyr: this.player,\n      });\n\n      this.videoElement = null;\n    }\n  }\n\n  private get hostElement() {\n    return this.elementRef.nativeElement;\n  }\n\n  // this method is required because the plyr inserts clone of the original element on destroy\n  // so we catch the clone element right here and reuse it\n  private ensureVideoElement() {\n    const videoElement = this.hostElement.querySelector('video');\n\n    if (videoElement) {\n      this.videoElement = videoElement;\n    } else {\n      this.videoElement = this.renderer.createElement('video');\n      this.videoElement.controls = true;\n\n      if (this.plyrCrossOrigin) {\n        this.videoElement.setAttribute('crossorigin', '');\n      }\n\n      if (this.plyrPlaysInline) {\n        this.videoElement.setAttribute('playsinline', '');\n      }\n\n      this.renderer.appendChild(this.hostElement, this.videoElement);\n    }\n  }\n\n  private on(name: string, handler: any) {\n    this.events.set(name, handler);\n    this.player.on(name as any, handler);\n  }\n\n  private off(name: string) {\n    this.player.off(name as any, this.events.get(name));\n    this.events.delete(name);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { PlyrComponent } from './plyr/plyr.component';\n\n@NgModule({\n  declarations: [\n    PlyrComponent,\n  ],\n  exports: [\n    PlyrComponent,\n  ]\n})\nexport class PlyrModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}