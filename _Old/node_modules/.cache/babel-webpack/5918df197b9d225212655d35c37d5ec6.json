{"ast":null,"code":"import _classCallCheck from \"C:/git/sportspip/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/git/sportspip/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate } from 'tslib';\nimport { ViewChild, Input, Component, forwardRef, EventEmitter, ElementRef, Renderer2, Output, HostListener, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlContainer, NgControl } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport 'flatpickr';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\nvar _c0 = [\"flatpickr\"];\n\nfunction Ng2FlatpickrComponent_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"input\", 3);\n    ɵngcc0.ɵɵlistener(\"focus\", function Ng2FlatpickrComponent_input_2_Template_input_focus_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.onFocus($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"ng2-flatpickr-input \", ctx_r1.addClass, \"\");\n    ɵngcc0.ɵɵproperty(\"placeholder\", ctx_r1.placeholder)(\"tabindex\", ctx_r1.tabindex);\n  }\n}\n\nvar _c1 = [\"*\"];\nvar Ng2FlatpickrComponent_1;\n\nif (typeof window !== 'undefined') {\n  require('flatpickr');\n}\n\nvar Ng2FlatpickrComponent = Ng2FlatpickrComponent_1 = /*#__PURE__*/function () {\n  function Ng2FlatpickrComponent() {\n    var _this = this;\n\n    _classCallCheck(this, Ng2FlatpickrComponent);\n\n    this._tabindex = 0;\n\n    this.onTouchedFn = function () {};\n\n    this.defaultFlatpickrOptions = {\n      wrap: true,\n      clickOpens: true,\n      onChange: function onChange(selectedDates) {\n        _this.writeValue(selectedDates);\n      }\n    };\n    this.placeholder = \"\";\n    this.addClass = \"\";\n    this.hideButton = false;\n\n    this.propagateChange = function (_) {};\n  }\n\n  _createClass(Ng2FlatpickrComponent, [{\n    key: \"tabindex\",\n    get: function get() {\n      return this._tabindex;\n    },\n    set: function set(ti) {\n      this._tabindex = Number(ti);\n    } ///////////////////////////////////\n\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.propagateChange(value);\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.propagateChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouchedFn = fn;\n    } ///////////////////////////////////\n\n  }, {\n    key: \"setDateFromInput\",\n    value: function setDateFromInput(date) {\n      this.flatpickrElement.nativeElement._flatpickr.setDate(date, true);\n    }\n  }, {\n    key: \"setAltInputPlaceholder\",\n    value: function setAltInputPlaceholder(placeholder) {\n      this.flatpickrElement.nativeElement._flatpickr.altInput.setAttribute('placeholder', placeholder);\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      if (this.config) {\n        Object.assign(this.defaultFlatpickrOptions, this.config);\n      }\n\n      if (this.flatpickrElement.nativeElement.flatpickr) {\n        this.flatpickr = this.flatpickrElement.nativeElement.flatpickr(this.defaultFlatpickrOptions);\n      }\n\n      if (this.setDate) {\n        this.setDateFromInput(this.setDate);\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (this.flatpickrElement.nativeElement && this.flatpickrElement.nativeElement._flatpickr) {\n        if (changes.hasOwnProperty('setDate') && changes['setDate'].currentValue) {\n          this.setDateFromInput(changes['setDate'].currentValue);\n        }\n\n        if (this.config.altInput && changes.hasOwnProperty('placeholder') && changes['placeholder'].currentValue) {\n          this.setAltInputPlaceholder(changes['placeholder'].currentValue);\n        }\n      }\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus(event) {\n      this.onTouchedFn();\n    }\n  }]);\n\n  return Ng2FlatpickrComponent;\n}();\n\nNg2FlatpickrComponent.ɵfac = function Ng2FlatpickrComponent_Factory(t) {\n  return new (t || Ng2FlatpickrComponent)();\n};\n\nNg2FlatpickrComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: Ng2FlatpickrComponent,\n  selectors: [[\"ng2-flatpickr\"]],\n  viewQuery: function Ng2FlatpickrComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 3);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.flatpickrElement = _t.first);\n    }\n  },\n  inputs: {\n    placeholder: \"placeholder\",\n    addClass: \"addClass\",\n    hideButton: \"hideButton\",\n    tabindex: \"tabindex\",\n    config: \"config\",\n    setDate: \"setDate\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () {\n      return Ng2FlatpickrComponent_1;\n    }),\n    multi: true\n  }]), ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c1,\n  decls: 4,\n  vars: 1,\n  consts: [[1, \"ng2-flatpickr-input-container\"], [\"flatpickr\", \"\"], [\"type\", \"text\", \"data-input\", \"\", 3, \"class\", \"placeholder\", \"tabindex\", \"focus\", 4, \"ngIf\"], [\"type\", \"text\", \"data-input\", \"\", 3, \"placeholder\", \"tabindex\", \"focus\"]],\n  template: function Ng2FlatpickrComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵtemplate(2, Ng2FlatpickrComponent_input_2_Template, 1, 5, \"input\", 2);\n      ɵngcc0.ɵɵprojection(3);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hideButton);\n    }\n  },\n  directives: [ɵngcc1.NgIf],\n  encapsulation: 2\n});\n\n__decorate([ViewChild('flatpickr', {\n  static: true\n})], Ng2FlatpickrComponent.prototype, \"flatpickrElement\", void 0);\n\n__decorate([Input()], Ng2FlatpickrComponent.prototype, \"config\", void 0);\n\n__decorate([Input()], Ng2FlatpickrComponent.prototype, \"placeholder\", void 0);\n\n__decorate([Input()], Ng2FlatpickrComponent.prototype, \"addClass\", void 0);\n\n__decorate([Input()], Ng2FlatpickrComponent.prototype, \"setDate\", void 0);\n\n__decorate([Input()], Ng2FlatpickrComponent.prototype, \"tabindex\", null);\n\n__decorate([Input()], Ng2FlatpickrComponent.prototype, \"hideButton\", void 0);\n\nvar Ng2FlatpickrDirective = /*#__PURE__*/function () {\n  function Ng2FlatpickrDirective(parent, ngControl, element, renderer) {\n    _classCallCheck(this, Ng2FlatpickrDirective);\n\n    this.parent = parent;\n    this.ngControl = ngControl;\n    this.element = element;\n    this.renderer = renderer;\n    /**\r\n     * onChange gets triggered when the user selects a date, or changes the time on a selected date.\r\n     *\r\n     * Default:  null\r\n     */\n\n    this.flatpickrOnChange = new EventEmitter();\n    /**\r\n     * onClose gets triggered when the calendar is closed.\r\n     *\r\n     * Default:  null\r\n     */\n\n    this.flatpickrOnClose = new EventEmitter();\n    /**\r\n     * onOpen gets triggered when the calendar is opened.\r\n     *\r\n     * Default:  null\r\n     */\n\n    this.flatpickrOnOpen = new EventEmitter();\n    /**\r\n     * onReady gets triggered once the calendar is in a ready state.\r\n     *\r\n     * Default:  null\r\n     */\n\n    this.flatpickrOnReady = new EventEmitter();\n  }\n  /** Allow double-clicking on the control to open/close it. */\n\n\n  _createClass(Ng2FlatpickrDirective, [{\n    key: \"onClick\",\n    value: function onClick() {\n      this.flatpickr.toggle();\n    }\n  }, {\n    key: \"control\",\n    get: function get() {\n      return this.parent ? this.parent.formDirective.getControl(this.ngControl) : null;\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      /** We cannot initialize the flatpickr instance in ngOnInit(); it will\r\n          randomize the date when the form control initializes. */\n      var nativeElement = this.element.nativeElement;\n\n      if (typeof nativeElement === 'undefined' || nativeElement === null) {\n        throw 'Error: invalid input element specified';\n      }\n\n      if (this.flatpickrOptions.wrap) {\n        this.renderer.setAttribute(this.element.nativeElement, 'data-input', '');\n        nativeElement = nativeElement.parentNode;\n      }\n\n      this.flatpickr = nativeElement.flatpickr(this.flatpickrOptions);\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (this.flatpickr && this.flatpickrAltInput && changes.hasOwnProperty('placeholder') && changes['placeholder'].currentValue) {\n        this.flatpickr.altInput.setAttribute('placeholder', changes['placeholder'].currentValue);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.flatpickr) {\n        this.flatpickr.destroy();\n      }\n\n      if (this.formControlListener) {\n        this.formControlListener.unsubscribe();\n        this.formControlListener = undefined;\n      }\n\n      this.flatpickrOnChange = undefined;\n      this.flatpickrOnClose = undefined;\n      this.flatpickrOnOpen = undefined;\n      this.flatpickrOnReady = undefined;\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this2 = this;\n\n      this.globalOnChange = this.flatpickrOptions.onChange;\n      this.globalOnClose = this.flatpickrOptions.onClose;\n      this.globalOnOpen = this.flatpickrOptions.onOpen;\n      this.globalOnReady = this.flatpickrOptions.onReady;\n      this.flatpickrOptions = {\n        altFormat: this.getOption('altFormat'),\n        altInput: this.getOption('altInput'),\n        altInputClass: this.getOption('altInputClass'),\n        allowInput: this.getOption('allowInput'),\n        appendTo: this.getOption('appendTo'),\n        clickOpens: this.getOption('clickOpens', true),\n        dateFormat: this.getOption('dateFormat'),\n        defaultDate: this.getOption('defaultDate'),\n        disable: this.getOption('disable'),\n        disableMobile: this.getOption('disableMobile'),\n        enable: this.getOption('enable'),\n        enableTime: this.getOption('enableTime'),\n        enableSeconds: this.getOption('enableSeconds'),\n        hourIncrement: this.getOption('hourIncrement'),\n        inline: this.getOption('inline'),\n        locale: this.getOption('locale'),\n        maxDate: this.getOption('maxDate'),\n        minDate: this.getOption('minDate'),\n        minuteIncrement: this.getOption('minuteIncrement'),\n        mode: this.getOption('mode'),\n        nextArrow: this.getOption('nextArrow'),\n        noCalendar: this.getOption('noCalendar'),\n        onChange: this.eventOnChange.bind(this),\n        onClose: this.eventOnClose.bind(this),\n        onOpen: this.eventOnOpen.bind(this),\n        onReady: this.eventOnReady.bind(this),\n        parseDate: this.getOption('parseDate'),\n        prevArrow: this.getOption('prevArrow'),\n        shorthandCurrentMonth: this.getOption('shorthandCurrentMonth'),\n        static: this.getOption('static'),\n        time_24hr: this.getOption('time_24hr'),\n        utc: this.getOption('utc'),\n        weekNumbers: this.getOption('weekNumbers'),\n        wrap: this.getOption('wrap', true)\n      }; // Remove unset properties\n\n      Object.keys(this.flatpickrOptions).forEach(function (key) {\n        _this2.flatpickrOptions[key] === undefined && delete _this2.flatpickrOptions[key];\n      });\n\n      if (this.control) {\n        this.formControlListener = this.control.valueChanges.subscribe(function (value) {\n          if (!(value instanceof Date)) {\n            // Quietly update the value of the form control to be a\n            // Date object. This avoids any external subscribers\n            // from being notified a second time (once for the user\n            // initiated event, and once for our conversion to\n            // Date()).\n            _this2.control.setValue(new Date('' + value), {\n              onlySelf: true,\n              emitEvent: false,\n              emitModelToViewChange: false,\n              emitViewToModelChange: false\n            });\n          }\n        });\n      }\n    }\n    /**\r\n     * Fire off the event emitter for the directive element, and also for the\r\n     * global onChange callback, if defined.\r\n     */\n\n  }, {\n    key: \"eventOnChange\",\n    value: function eventOnChange(selectedDates, dateStr, instance) {\n      var event = {\n        selectedDates: selectedDates,\n        dateStr: dateStr,\n        instance: instance\n      };\n\n      if (this.flatpickrOnChange) {\n        this.flatpickrOnChange.emit(event);\n      }\n\n      if (this.globalOnChange) {\n        this.globalOnChange(event);\n      }\n    }\n    /**\r\n     * Fire off the event emitter for the directive element, and also for the\r\n     * global onClose callback, if defined.\r\n     */\n\n  }, {\n    key: \"eventOnClose\",\n    value: function eventOnClose(selectedDates, dateStr, instance) {\n      var event = {\n        selectedDates: selectedDates,\n        dateStr: dateStr,\n        instance: instance\n      };\n\n      if (this.flatpickrOnClose) {\n        this.flatpickrOnClose.emit(event);\n      }\n\n      if (this.globalOnClose) {\n        this.globalOnClose(event);\n      }\n    }\n    /**\r\n     * Fire off the event emitter for the directive element, and also for the\r\n     * global onOpen callback, if defined.\r\n     */\n\n  }, {\n    key: \"eventOnOpen\",\n    value: function eventOnOpen(selectedDates, dateStr, instance) {\n      var event = {\n        selectedDates: selectedDates,\n        dateStr: dateStr,\n        instance: instance\n      };\n\n      if (this.flatpickrOnOpen) {\n        this.flatpickrOnOpen.emit(event);\n      }\n\n      if (this.globalOnOpen) {\n        this.globalOnOpen(event);\n      }\n    }\n    /**\r\n     * Fire off the event emitter for the directive element, and also for the\r\n     * global onReady callback, if defined.\r\n     */\n\n  }, {\n    key: \"eventOnReady\",\n    value: function eventOnReady(selectedDates, dateStr, instance) {\n      var event = {\n        selectedDates: selectedDates,\n        dateStr: dateStr,\n        instance: instance\n      };\n\n      if (this.flatpickrOnReady) {\n        this.flatpickrOnReady.emit(event);\n      }\n\n      if (this.globalOnReady) {\n        this.globalOnReady(event);\n      }\n    }\n    /**\r\n     * Return the configuration value for option {option}, or {defaultValue} if it\r\n     * doesn't exist.\r\n     */\n\n  }, {\n    key: \"getOption\",\n    value: function getOption(option, defaultValue) {\n      var localName = 'flatpickr' + option.substring(0, 1).toUpperCase() + option.substring(1);\n\n      if (typeof this[localName] !== 'undefined') {\n        return this[localName];\n      } else if (typeof this.flatpickrOptions[option] !== 'undefined') {\n        return this.flatpickrOptions[option];\n      } else {\n        return defaultValue;\n      }\n    }\n  }]);\n\n  return Ng2FlatpickrDirective;\n}();\n\nNg2FlatpickrDirective.ɵfac = function Ng2FlatpickrDirective_Factory(t) {\n  return new (t || Ng2FlatpickrDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ControlContainer), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n};\n\nNg2FlatpickrDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: Ng2FlatpickrDirective,\n  selectors: [[\"\", \"flatpickr\", \"\"]],\n  hostBindings: function Ng2FlatpickrDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"dblclick\", function Ng2FlatpickrDirective_dblclick_HostBindingHandler() {\n        return ctx.onClick();\n      });\n    }\n  },\n  inputs: {\n    flatpickrOptions: [\"flatpickr\", \"flatpickrOptions\"],\n    placeholder: \"placeholder\",\n    flatpickrAltFormat: [\"altFormat\", \"flatpickrAltFormat\"],\n    flatpickrAltInput: [\"altInput\", \"flatpickrAltInput\"],\n    flatpickrAltInputClass: [\"altInputClass\", \"flatpickrAltInputClass\"],\n    flatpickrAllowInput: [\"allowInput\", \"flatpickrAllowInput\"],\n    flatpickrAppendTo: [\"appendTo\", \"flatpickrAppendTo\"],\n    flatpickrClickOpens: [\"clickOpens\", \"flatpickrClickOpens\"],\n    flatpickrDateFormat: [\"dateFormat\", \"flatpickrDateFormat\"],\n    flatpickrDefaultDate: [\"defaultDate\", \"flatpickrDefaultDate\"],\n    flatpickrDisable: [\"disable\", \"flatpickrDisable\"],\n    flatpickrDisableMobile: [\"disableMobile\", \"flatpickrDisableMobile\"],\n    flatpickrEnable: [\"enable\", \"flatpickrEnable\"],\n    flatpickrEnableTime: [\"enableTime\", \"flatpickrEnableTime\"],\n    flatpickrEnableSeconds: [\"enableSeconds\", \"flatpickrEnableSeconds\"],\n    flatpickrHourIncrement: [\"hourIncrement\", \"flatpickrHourIncrement\"],\n    flatpickrInline: [\"inline\", \"flatpickrInline\"],\n    flatpickrLocale: [\"locale\", \"flatpickrLocale\"],\n    flatpickrMaxDate: [\"maxDate\", \"flatpickrMaxDate\"],\n    flatpickrMinDate: [\"minDate\", \"flatpickrMinDate\"],\n    flatpickrMinuteIncrement: [\"minuteIncrement\", \"flatpickrMinuteIncrement\"],\n    flatpickrMode: [\"mode\", \"flatpickrMode\"],\n    flatpickrNextArrow: [\"nextArrow\", \"flatpickrNextArrow\"],\n    flatpickrNoCalendar: [\"noCalendar\", \"flatpickrNoCalendar\"],\n    flatpickrParseDate: [\"parseDate\", \"flatpickrParseDate\"],\n    flatpickrPrevArrow: [\"prevArrow\", \"flatpickrPrevArrow\"],\n    flatpickrShorthandCurrentMonth: [\"shorthandCurrentMonth\", \"flatpickrShorthandCurrentMonth\"],\n    flatpickrStatic: [\"static\", \"flatpickrStatic\"],\n    flatpickrTime_24hr: [\"time_24hr\", \"flatpickrTime_24hr\"],\n    flatpickrUtc: [\"utc\", \"flatpickrUtc\"],\n    flatpickrWeekNumbers: [\"weekNumbers\", \"flatpickrWeekNumbers\"],\n    flatpickrWrap: [\"wrap\", \"flatpickrWrap\"]\n  },\n  outputs: {\n    flatpickrOnChange: \"onChange\",\n    flatpickrOnClose: \"onClose\",\n    flatpickrOnOpen: \"onOpen\",\n    flatpickrOnReady: \"onReady\"\n  },\n  exportAs: [\"ng2-flatpickr\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNg2FlatpickrDirective.ctorParameters = function () {\n  return [{\n    type: ControlContainer\n  }, {\n    type: NgControl\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }];\n};\n\n__decorate([Input('flatpickr')], Ng2FlatpickrDirective.prototype, \"flatpickrOptions\", void 0);\n\n__decorate([Input('placeholder')], Ng2FlatpickrDirective.prototype, \"placeholder\", void 0);\n\n__decorate([Input('altFormat')], Ng2FlatpickrDirective.prototype, \"flatpickrAltFormat\", void 0);\n\n__decorate([Input('altInput')], Ng2FlatpickrDirective.prototype, \"flatpickrAltInput\", void 0);\n\n__decorate([Input('altInputClass')], Ng2FlatpickrDirective.prototype, \"flatpickrAltInputClass\", void 0);\n\n__decorate([Input('allowInput')], Ng2FlatpickrDirective.prototype, \"flatpickrAllowInput\", void 0);\n\n__decorate([Input('appendTo')], Ng2FlatpickrDirective.prototype, \"flatpickrAppendTo\", void 0);\n\n__decorate([Input('clickOpens')], Ng2FlatpickrDirective.prototype, \"flatpickrClickOpens\", void 0);\n\n__decorate([Input('dateFormat')], Ng2FlatpickrDirective.prototype, \"flatpickrDateFormat\", void 0);\n\n__decorate([Input('defaultDate')], Ng2FlatpickrDirective.prototype, \"flatpickrDefaultDate\", void 0);\n\n__decorate([Input('disable')], Ng2FlatpickrDirective.prototype, \"flatpickrDisable\", void 0);\n\n__decorate([Input('disableMobile')], Ng2FlatpickrDirective.prototype, \"flatpickrDisableMobile\", void 0);\n\n__decorate([Input('enable')], Ng2FlatpickrDirective.prototype, \"flatpickrEnable\", void 0);\n\n__decorate([Input('enableTime')], Ng2FlatpickrDirective.prototype, \"flatpickrEnableTime\", void 0);\n\n__decorate([Input('enableSeconds')], Ng2FlatpickrDirective.prototype, \"flatpickrEnableSeconds\", void 0);\n\n__decorate([Input('hourIncrement')], Ng2FlatpickrDirective.prototype, \"flatpickrHourIncrement\", void 0);\n\n__decorate([Input('inline')], Ng2FlatpickrDirective.prototype, \"flatpickrInline\", void 0);\n\n__decorate([Input('locale')], Ng2FlatpickrDirective.prototype, \"flatpickrLocale\", void 0);\n\n__decorate([Input('maxDate')], Ng2FlatpickrDirective.prototype, \"flatpickrMaxDate\", void 0);\n\n__decorate([Input('minDate')], Ng2FlatpickrDirective.prototype, \"flatpickrMinDate\", void 0);\n\n__decorate([Input('minuteIncrement')], Ng2FlatpickrDirective.prototype, \"flatpickrMinuteIncrement\", void 0);\n\n__decorate([Input('mode')], Ng2FlatpickrDirective.prototype, \"flatpickrMode\", void 0);\n\n__decorate([Input('nextArrow')], Ng2FlatpickrDirective.prototype, \"flatpickrNextArrow\", void 0);\n\n__decorate([Input('noCalendar')], Ng2FlatpickrDirective.prototype, \"flatpickrNoCalendar\", void 0);\n\n__decorate([Input('parseDate')], Ng2FlatpickrDirective.prototype, \"flatpickrParseDate\", void 0);\n\n__decorate([Input('prevArrow')], Ng2FlatpickrDirective.prototype, \"flatpickrPrevArrow\", void 0);\n\n__decorate([Input('shorthandCurrentMonth')], Ng2FlatpickrDirective.prototype, \"flatpickrShorthandCurrentMonth\", void 0);\n\n__decorate([Input('static')], Ng2FlatpickrDirective.prototype, \"flatpickrStatic\", void 0);\n\n__decorate([Input('time_24hr')], Ng2FlatpickrDirective.prototype, \"flatpickrTime_24hr\", void 0);\n\n__decorate([Input('utc')], Ng2FlatpickrDirective.prototype, \"flatpickrUtc\", void 0);\n\n__decorate([Input('weekNumbers')], Ng2FlatpickrDirective.prototype, \"flatpickrWeekNumbers\", void 0);\n\n__decorate([Input('wrap')], Ng2FlatpickrDirective.prototype, \"flatpickrWrap\", void 0);\n\n__decorate([Output('onChange')], Ng2FlatpickrDirective.prototype, \"flatpickrOnChange\", void 0);\n\n__decorate([Output('onClose')], Ng2FlatpickrDirective.prototype, \"flatpickrOnClose\", void 0);\n\n__decorate([Output('onOpen')], Ng2FlatpickrDirective.prototype, \"flatpickrOnOpen\", void 0);\n\n__decorate([Output('onReady')], Ng2FlatpickrDirective.prototype, \"flatpickrOnReady\", void 0);\n\n__decorate([HostListener('dblclick')], Ng2FlatpickrDirective.prototype, \"onClick\", null);\n\nvar Ng2FlatpickrModule = function Ng2FlatpickrModule() {\n  _classCallCheck(this, Ng2FlatpickrModule);\n};\n\nNg2FlatpickrModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: Ng2FlatpickrModule\n});\nNg2FlatpickrModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function Ng2FlatpickrModule_Factory(t) {\n    return new (t || Ng2FlatpickrModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng2FlatpickrComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng2-flatpickr',\n      template: \"\\n\\t\\t<div class=\\\"ng2-flatpickr-input-container\\\" #flatpickr>\\n\\t\\t\\t<input *ngIf=\\\"!hideButton\\\" class=\\\"ng2-flatpickr-input {{ addClass }}\\\" [placeholder]=\\\"placeholder\\\" [tabindex]=\\\"tabindex\\\" type=\\\"text\\\" (focus)=\\\"onFocus($event)\\\" data-input>\\n\\t\\t\\t<ng-content></ng-content>\\n\\t\\t</div>\\n\\t\\t\",\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(function () {\n          return Ng2FlatpickrComponent_1;\n        }),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [];\n  }, {\n    placeholder: [{\n      type: Input\n    }],\n    addClass: [{\n      type: Input\n    }],\n    hideButton: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    flatpickrElement: [{\n      type: ViewChild,\n      args: ['flatpickr', {\n        static: true\n      }]\n    }],\n    config: [{\n      type: Input\n    }],\n    setDate: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng2FlatpickrDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[flatpickr]',\n      exportAs: 'ng2-flatpickr'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc2.ControlContainer\n    }, {\n      type: ɵngcc2.NgControl\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }];\n  }, {\n    flatpickrOnChange: [{\n      type: Output,\n      args: ['onChange']\n    }],\n    flatpickrOnClose: [{\n      type: Output,\n      args: ['onClose']\n    }],\n    flatpickrOnOpen: [{\n      type: Output,\n      args: ['onOpen']\n    }],\n    flatpickrOnReady: [{\n      type: Output,\n      args: ['onReady']\n    }],\n\n    /** Allow double-clicking on the control to open/close it. */\n    onClick: [{\n      type: HostListener,\n      args: ['dblclick']\n    }],\n    flatpickrOptions: [{\n      type: Input,\n      args: ['flatpickr']\n    }],\n    placeholder: [{\n      type: Input,\n      args: ['placeholder']\n    }],\n    flatpickrAltFormat: [{\n      type: Input,\n      args: ['altFormat']\n    }],\n    flatpickrAltInput: [{\n      type: Input,\n      args: ['altInput']\n    }],\n    flatpickrAltInputClass: [{\n      type: Input,\n      args: ['altInputClass']\n    }],\n    flatpickrAllowInput: [{\n      type: Input,\n      args: ['allowInput']\n    }],\n    flatpickrAppendTo: [{\n      type: Input,\n      args: ['appendTo']\n    }],\n    flatpickrClickOpens: [{\n      type: Input,\n      args: ['clickOpens']\n    }],\n    flatpickrDateFormat: [{\n      type: Input,\n      args: ['dateFormat']\n    }],\n    flatpickrDefaultDate: [{\n      type: Input,\n      args: ['defaultDate']\n    }],\n    flatpickrDisable: [{\n      type: Input,\n      args: ['disable']\n    }],\n    flatpickrDisableMobile: [{\n      type: Input,\n      args: ['disableMobile']\n    }],\n    flatpickrEnable: [{\n      type: Input,\n      args: ['enable']\n    }],\n    flatpickrEnableTime: [{\n      type: Input,\n      args: ['enableTime']\n    }],\n    flatpickrEnableSeconds: [{\n      type: Input,\n      args: ['enableSeconds']\n    }],\n    flatpickrHourIncrement: [{\n      type: Input,\n      args: ['hourIncrement']\n    }],\n    flatpickrInline: [{\n      type: Input,\n      args: ['inline']\n    }],\n    flatpickrLocale: [{\n      type: Input,\n      args: ['locale']\n    }],\n    flatpickrMaxDate: [{\n      type: Input,\n      args: ['maxDate']\n    }],\n    flatpickrMinDate: [{\n      type: Input,\n      args: ['minDate']\n    }],\n    flatpickrMinuteIncrement: [{\n      type: Input,\n      args: ['minuteIncrement']\n    }],\n    flatpickrMode: [{\n      type: Input,\n      args: ['mode']\n    }],\n    flatpickrNextArrow: [{\n      type: Input,\n      args: ['nextArrow']\n    }],\n    flatpickrNoCalendar: [{\n      type: Input,\n      args: ['noCalendar']\n    }],\n    flatpickrParseDate: [{\n      type: Input,\n      args: ['parseDate']\n    }],\n    flatpickrPrevArrow: [{\n      type: Input,\n      args: ['prevArrow']\n    }],\n    flatpickrShorthandCurrentMonth: [{\n      type: Input,\n      args: ['shorthandCurrentMonth']\n    }],\n    flatpickrStatic: [{\n      type: Input,\n      args: ['static']\n    }],\n    flatpickrTime_24hr: [{\n      type: Input,\n      args: ['time_24hr']\n    }],\n    flatpickrUtc: [{\n      type: Input,\n      args: ['utc']\n    }],\n    flatpickrWeekNumbers: [{\n      type: Input,\n      args: ['weekNumbers']\n    }],\n    flatpickrWrap: [{\n      type: Input,\n      args: ['wrap']\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Ng2FlatpickrModule, {\n    declarations: function declarations() {\n      return [Ng2FlatpickrComponent, Ng2FlatpickrDirective];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [Ng2FlatpickrComponent, Ng2FlatpickrDirective];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng2FlatpickrModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [Ng2FlatpickrComponent, Ng2FlatpickrDirective],\n      exports: [Ng2FlatpickrComponent, Ng2FlatpickrDirective]\n    }]\n  }], null, null);\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { Ng2FlatpickrComponent, Ng2FlatpickrDirective, Ng2FlatpickrModule };","map":{"version":3,"sources":["ng2-flatpickr/src/ng2-flatpickr.component.ts","ng2-flatpickr/src/ng2-flatpickr.directive.ts","ng2-flatpickr/src/ng2-flatpickr.module.ts","ng2-flatpickr/ng2-flatpickr.ts"],"names":["tslib_1.__decorate"],"mappings":"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","sourcesContent":["import { Component, ViewChild, AfterViewInit, forwardRef, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { FlatpickrOptions } from './flatpickr-options.interface';\r\n\r\ndeclare var require: any;\r\n\r\nif(typeof window !== 'undefined'){\r\n    require( 'flatpickr' );\r\n}\r\n\r\n@Component({\r\n\tselector: 'ng2-flatpickr',\r\n\ttemplate: `\r\n\t\t<div class=\"ng2-flatpickr-input-container\" #flatpickr>\r\n\t\t\t<input *ngIf=\"!hideButton\" class=\"ng2-flatpickr-input {{ addClass }}\" [placeholder]=\"placeholder\" [tabindex]=\"tabindex\" type=\"text\" (focus)=\"onFocus($event)\" data-input>\r\n\t\t\t<ng-content></ng-content>\r\n\t\t</div>\r\n\t\t`,\r\n\tproviders: [\r\n\t\t{\r\n\t\t\tprovide: NG_VALUE_ACCESSOR,\r\n\t\t\tuseExisting: forwardRef( () => Ng2FlatpickrComponent ),\r\n\t\t\tmulti: true\r\n\t\t}\r\n\t]\r\n})\r\nexport class Ng2FlatpickrComponent implements AfterViewInit, ControlValueAccessor, OnChanges {\r\n\r\n  \tpublic flatpickr: Object;\r\n  \tprivate _tabindex = 0;\r\n\tonTouchedFn: Function = () => { };\r\n\r\n\tprivate defaultFlatpickrOptions: FlatpickrOptions = {\r\n\t\twrap: true,\r\n\t\tclickOpens: true,\r\n\t\tonChange: ( selectedDates: any ) => { this.writeValue( selectedDates ); }\r\n\t};\r\n\r\n\t@ViewChild('flatpickr', {\r\n\t\tstatic: true\r\n\t})\r\n\tflatpickrElement: any;\r\n\r\n\t@Input()\r\n\tconfig: FlatpickrOptions;\r\n\r\n\t@Input()\r\n\tplaceholder: string = \"\";\r\n\r\n \t@Input()\r\n\taddClass: string = \"\";\r\n\r\n\t@Input()\r\n\tsetDate: string | Date;\r\n\r\n\t@Input()\r\n\tget tabindex() { return this._tabindex; }\r\n\tset tabindex( ti: number ) { this._tabindex = Number( ti ); }\r\n\r\n\t@Input()\r\n\thideButton = false;\r\n\r\n\t///////////////////////////////////\r\n\r\n\twriteValue( value:any ) {\r\n\t\tthis.propagateChange( value );\r\n\t}\r\n\r\n\tregisterOnChange( fn: any ) {\r\n\t\tthis.propagateChange = fn;\r\n\t}\r\n\r\n\tregisterOnTouched(fn: any): void {\r\n\t\tthis.onTouchedFn = fn;\r\n\t}\r\n\r\n\tpropagateChange = ( _: any ) => {};\r\n\r\n\t///////////////////////////////////\r\n\r\n\tsetDateFromInput( date: any ) {\r\n\t\tthis.flatpickrElement.nativeElement._flatpickr.setDate( date, true );\r\n\t}\r\n\r\n\tsetAltInputPlaceholder( placeholder: string ) {\r\n\t\tthis.flatpickrElement.nativeElement._flatpickr.altInput.setAttribute( 'placeholder', placeholder );\r\n\t}\r\n\r\n\tngAfterViewInit() {\r\n\t\tif( this.config ) {\r\n\t\t\tObject.assign( this.defaultFlatpickrOptions, this.config );\r\n\t\t}\r\n\t\tif( this.flatpickrElement.nativeElement.flatpickr ) {\r\n\t\t\tthis.flatpickr = this.flatpickrElement.nativeElement.flatpickr( this.defaultFlatpickrOptions );\r\n\t\t}\r\n\t\tif( this.setDate ) {\r\n\t\t\tthis.setDateFromInput( this.setDate );\r\n\t\t}\r\n\t}\r\n\r\n\tngOnChanges( changes: SimpleChanges ) {\r\n\t\tif( this.flatpickrElement.nativeElement \r\n\t\t\t&& this.flatpickrElement.nativeElement._flatpickr ) {\r\n\t\t\t\t\r\n\t\t\t\tif( changes.hasOwnProperty( 'setDate' ) \r\n\t\t\t\t\t&& changes[ 'setDate' ].currentValue ) {\r\n\t\t\t\t\t\tthis.setDateFromInput( changes[ 'setDate' ].currentValue );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\tif( this.config.altInput\r\n\t\t\t\t\t&& changes.hasOwnProperty( 'placeholder' ) \r\n\t\t\t\t\t&& changes[ 'placeholder' ].currentValue ) {\r\n\t\t\t\t\t\tthis.setAltInputPlaceholder( changes[ 'placeholder' ].currentValue );\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t}\r\n\t\r\n\tonFocus(event: any) {\r\n\t\tthis.onTouchedFn();\r\n\t}\r\n}\r\n","import {\r\n\tAfterViewInit, Directive, ElementRef, EventEmitter, HostListener, Input,\r\n\tOnDestroy, OnInit, Output, Renderer2, SimpleChanges, OnChanges\r\n} from '@angular/core';\r\nimport { ControlContainer, FormControl, NgControl } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FlatpickrEvent } from './flatpickr-event.interface';\r\nimport { FlatpickrInstance } from './flatpickr-instance';\r\nimport { FlatpickrOptions } from './flatpickr-options.interface';\r\n\r\n@Directive({ selector: '[flatpickr]', exportAs: 'ng2-flatpickr' })\r\nexport class Ng2FlatpickrDirective implements AfterViewInit, OnDestroy, OnInit, OnChanges {\r\n\t/**\r\n\t * The flatpickr configuration as a single object of values.\r\n\t *\r\n\t * See https://chmln.github.io/flatpickr/options/ for full list.\r\n\t */\r\n\t@Input( 'flatpickr' ) public flatpickrOptions: FlatpickrOptions;\r\n\r\n\t/**\r\n\t * Placeholder for input field.\r\n\t *\r\n\t * Default:  null\r\n\t */\r\n\t@Input( 'placeholder' ) public placeholder: string;\r\n\r\n\t/**\r\n\t * Exactly the same as date format, but for the altInput field.\r\n\t *\r\n\t * Default:  \"F j, Y\"\r\n\t */\r\n\t@Input( 'altFormat' ) public flatpickrAltFormat: string;\r\n\r\n\t/**\r\n\t * Show the user a readable date (as per altFormat), but return something\r\n\t * totally different to the server.\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'altInput' ) public flatpickrAltInput: boolean;\r\n\r\n\t/**\r\n\t * This class will be added to the input element created by the altInput\r\n\t * option.\r\n\t *\r\n\t * Default:  \"\"\r\n\t */\r\n\t@Input( 'altInputClass' ) public flatpickrAltInputClass: string;\r\n\r\n\t/**\r\n\t * Allows the user to enter a date directly input the input field. By\r\n\t * default, direct entry is disabled.\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'allowInput' ) public flatpickrAllowInput: boolean;\r\n\r\n\t/**\r\n\t * Instead of body, appends the calendar to the specified node instead.\r\n\t *\r\n\t * Default:  null\r\n\t */\r\n\t@Input( 'appendTo' ) public flatpickrAppendTo: any; // HTMLElement\r\n\r\n\t/**\r\n\t * Whether clicking on the input should open the picker.\r\n\t * You could disable this if you wish to open the calendar manually\r\n\t * with.open().\r\n\t *\r\n\t * Default:  true\r\n\t */\r\n\t@Input( 'clickOpens' ) public flatpickrClickOpens: boolean;\r\n\r\n\t/**\r\n\t * A string of characters which are used to define how the date will be\r\n\t * displayed in the input box.\r\n\t * See https://chmln.github.io/flatpickr/formatting/ for supported tokens.\r\n\t *\r\n\t * Default:  \"Y-m-d\"\r\n\t */\r\n\t@Input( 'dateFormat' ) public flatpickrDateFormat: string;\r\n\r\n\t/**\r\n\t * Sets the initial selected date(s).\r\n\t *\r\n\t * If you're using {mode: \"multiple\"} or a range calendar supply an Array of\r\n\t * Date objects or an Array of date strings which follow your dateFormat.\r\n\t *\r\n\t * Otherwise, you can supply a single Date object or a date string.\r\n\t *\r\n\t * Default:  null\r\n\t */\r\n\t@Input( 'defaultDate' ) public flatpickrDefaultDate: string | Date;\r\n\r\n\t/**\r\n\t * Disable an array of specific dates, date ranges, or functions to disable\r\n\t * dates. See https://chmln.github.io/flatpickr/examples/#disabling-specific-dates\r\n\t *\r\n\t * Default:  []\r\n\t */\r\n\t@Input( 'disable' ) public flatpickrDisable: string[] | Date[];\r\n\r\n\t/**\r\n\t * Set disableMobile to true to always use the non-native picker. By\r\n\t * default, Flatpickr utilizes native datetime widgets unless certain\r\n\t * options (e.g. disable) are used.\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'disableMobile' ) public flatpickrDisableMobile: boolean;\r\n\r\n\t/**\r\n\t * Enable an array of specific dates, date ranges, or functions to enable\r\n\t * dates. See https://chmln.github.io/flatpickr/examples/#disabling-all-dates-except-select-few\r\n\t *\r\n\t * Default:  []\r\n\t */\r\n\t@Input( 'enable' ) public flatpickrEnable: string[] | Date[];\r\n\r\n\t/**\r\n\t * Enables time picker.\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'enableTime' ) public flatpickrEnableTime: boolean;\r\n\r\n\t/**\r\n\t * Enables seconds in the time picker.\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'enableSeconds' ) public flatpickrEnableSeconds: boolean;\r\n\r\n\t/**\r\n\t * Adjusts the step for the hour input (incl. scrolling).\r\n\t *\r\n\t * Default:  1\r\n\t */\r\n\t@Input( 'hourIncrement' ) public flatpickrHourIncrement: number;\r\n\r\n\t/**\r\n\t * Displays the calendar inline.\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'inline' ) public flatpickrInline: boolean;\r\n\r\n\t/**\r\n\t * Use a specific locale for the flatpickr instance.\r\n\t *\r\n\t * Default:  null\r\n\t */\r\n\t@Input( 'locale' ) public flatpickrLocale: Object;\r\n\r\n\t/**\r\n\t * The maximum date that a user can pick to (inclusive).\r\n\t *\r\n\t * Default:  null\r\n\t */\r\n\t@Input( 'maxDate' ) public flatpickrMaxDate: string | Date;\r\n\r\n\t/**\r\n\t * The minimum date that a user can start picking from (inclusive).\r\n\t *\r\n\t * Default:  null\r\n\t */\r\n\t@Input( 'minDate' ) public flatpickrMinDate: string | Date;\r\n\r\n\t/**\r\n\t * Adjusts the step for the minute input (incl. scrolling).\r\n\t *\r\n\t * Default:  5\r\n\t */\r\n\t@Input( 'minuteIncrement' ) public flatpickrMinuteIncrement: number;\r\n\r\n\t/**\r\n\t * \"single\", \"multiple\", or \"range\"\r\n\t *\r\n\t * Default:  \"single\"\r\n\t */\r\n\t@Input( 'mode' ) public flatpickrMode: string;\r\n\r\n\t/**\r\n\t * HTML for the arrow icon, used to switch months.\r\n\t *\r\n\t * Default:  \">\"\r\n\t */\r\n\t@Input( 'nextArrow' ) public flatpickrNextArrow: string;\r\n\r\n\t/**\r\n\t * Hides the day selection in calendar. Use it along with enableTime to\r\n\t * create a time picker.\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'noCalendar' ) public flatpickrNoCalendar: boolean;\r\n\r\n\t/**\r\n\t * Function that expects a date string and must return a Date object.\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'parseDate' ) public flatpickrParseDate: Function;\r\n\r\n\t/**\r\n\t * HTML for the left arrow icon.\r\n\t *\r\n\t * Default:  \"<\"\r\n\t */\r\n\t@Input( 'prevArrow' ) public flatpickrPrevArrow: string;\r\n\r\n\t/**\r\n\t * Show the month using the shorthand version (ie, Sep instead of September).\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'shorthandCurrentMonth' ) public flatpickrShorthandCurrentMonth: boolean;\r\n\r\n\t/**\r\n\t * Position the calendar inside the wrapper and next to the input element\r\n\t * (Leave false unless you know what you're doing).\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'static' ) public flatpickrStatic: boolean;\r\n\r\n\t/**\r\n\t * Displays time picker in 24 hour mode without AM/PM selection when enabled.\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'time_24hr' ) public flatpickrTime_24hr: boolean;\r\n\r\n\t@Input( 'utc' ) public flatpickrUtc: boolean;\r\n\r\n\t/**\r\n\t * Enables display of week numbers in calendar.\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'weekNumbers' ) public flatpickrWeekNumbers: boolean;\r\n\r\n\t/**\r\n\t * Custom elements and input groups.\r\n\t *\r\n\t * Default:  false\r\n\t */\r\n\t@Input( 'wrap' ) public flatpickrWrap: boolean;\r\n\r\n\t/**\r\n\t * onChange gets triggered when the user selects a date, or changes the time on a selected date.\r\n\t *\r\n\t * Default:  null\r\n\t */\r\n\t@Output( 'onChange' ) public flatpickrOnChange: EventEmitter<FlatpickrEvent> = new EventEmitter();\r\n\r\n\t/**\r\n\t * onClose gets triggered when the calendar is closed.\r\n\t *\r\n\t * Default:  null\r\n\t */\r\n\t@Output( 'onClose' ) public flatpickrOnClose: EventEmitter<FlatpickrEvent> = new EventEmitter();\r\n\r\n\t/**\r\n\t * onOpen gets triggered when the calendar is opened.\r\n\t *\r\n\t * Default:  null\r\n\t */\r\n\t@Output( 'onOpen' ) public flatpickrOnOpen: EventEmitter<FlatpickrEvent> = new EventEmitter();\r\n\r\n\t/**\r\n\t * onReady gets triggered once the calendar is in a ready state.\r\n\t *\r\n\t * Default:  null\r\n\t */\r\n\t@Output( 'onReady' ) public flatpickrOnReady: EventEmitter<FlatpickrEvent> = new EventEmitter();\r\n\r\n\t/** Allow double-clicking on the control to open/close it. */\r\n\t@HostListener( 'dblclick' )\r\n\tpublic onClick() {\r\n\t\tthis.flatpickr.toggle();\r\n\t}\r\n\r\n\tprotected globalOnChange: Function;\r\n\tprotected globalOnClose: Function;\r\n\tprotected globalOnOpen: Function;\r\n\tprotected globalOnReady: Function;\r\n\r\n\tprotected flatpickr: FlatpickrInstance;\r\n\tprotected formControlListener: Subscription;\r\n\r\n\t/** Allow access properties using index notation */\r\n\t[key:string]: any;\r\n\r\n\tconstructor(\r\n\t\tprotected parent: ControlContainer,\r\n\t\tprotected ngControl: NgControl,\r\n\t\tprotected element: ElementRef,\r\n\t\tprotected renderer: Renderer2\r\n\t) {}\r\n\r\n\tget control(): FormControl {\r\n\t\treturn this.parent ? this.parent.formDirective.getControl(this.ngControl) : null;\r\n\t}\r\n\r\n\tngAfterViewInit() {\r\n\t\t/** We cannot initialize the flatpickr instance in ngOnInit(); it will\r\n\t\t\trandomize the date when the form control initializes. */\r\n\t\tlet nativeElement = this.element.nativeElement;\r\n\r\n\t\tif (typeof nativeElement === 'undefined' || nativeElement === null) {\r\n\t\t\tthrow 'Error: invalid input element specified';\r\n\t\t}\r\n\r\n\t\tif (this.flatpickrOptions.wrap) {\r\n\t\t\tthis.renderer.setAttribute( this.element.nativeElement, 'data-input', '' );\r\n\t\t\tnativeElement = nativeElement.parentNode;\r\n\t\t}\r\n\r\n\t\tthis.flatpickr = <FlatpickrInstance>nativeElement.flatpickr( this.flatpickrOptions );\r\n\t}\r\n\r\n\tngOnChanges( changes: SimpleChanges ) {\r\n\t\tif( this.flatpickr\r\n\t\t\t&& this.flatpickrAltInput\r\n\t\t\t&& changes.hasOwnProperty( 'placeholder' ) \r\n\t\t\t&& changes[ 'placeholder' ].currentValue ) {\r\n\t\t\t\tthis.flatpickr.altInput.setAttribute( 'placeholder', changes[ 'placeholder' ].currentValue );\r\n\t\t\t}\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tif (this.flatpickr) {\r\n\t\t\tthis.flatpickr.destroy();\r\n\t\t}\r\n\r\n\t\tif (this.formControlListener) {\r\n\t\t\tthis.formControlListener.unsubscribe();\r\n\t\t\tthis.formControlListener = undefined;\r\n\t\t}\r\n\r\n\t\tthis.flatpickrOnChange = undefined;\r\n\t\tthis.flatpickrOnClose = undefined;\r\n\t\tthis.flatpickrOnOpen = undefined;\r\n\t\tthis.flatpickrOnReady = undefined;\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.globalOnChange = this.flatpickrOptions.onChange;\r\n\t\tthis.globalOnClose = this.flatpickrOptions.onClose;\r\n\t\tthis.globalOnOpen = this.flatpickrOptions.onOpen;\r\n\t\tthis.globalOnReady = this.flatpickrOptions.onReady;\r\n\r\n\t\tthis.flatpickrOptions = {\r\n\t\t\taltFormat: this.getOption('altFormat'),\r\n\t\t\taltInput: this.getOption('altInput'),\r\n\t\t\taltInputClass: this.getOption('altInputClass'),\r\n\t\t\tallowInput: this.getOption('allowInput'),\r\n\t\t\tappendTo: this.getOption('appendTo'),\r\n\t\t\tclickOpens: this.getOption('clickOpens', true),\r\n\t\t\tdateFormat: this.getOption('dateFormat'),\r\n\t\t\tdefaultDate: this.getOption('defaultDate'),\r\n\t\t\tdisable: this.getOption('disable'),\r\n\t\t\tdisableMobile: this.getOption('disableMobile'),\r\n\t\t\tenable: this.getOption('enable'),\r\n\t\t\tenableTime: this.getOption('enableTime'),\r\n\t\t\tenableSeconds: this.getOption('enableSeconds'),\r\n\t\t\thourIncrement: this.getOption('hourIncrement'),\r\n\t\t\tinline: this.getOption('inline'),\r\n\t\t\tlocale: this.getOption('locale'),\r\n\t\t\tmaxDate: this.getOption('maxDate'),\r\n\t\t\tminDate: this.getOption('minDate'),\r\n\t\t\tminuteIncrement: this.getOption('minuteIncrement'),\r\n\t\t\tmode: this.getOption('mode'),\r\n\t\t\tnextArrow: this.getOption('nextArrow'),\r\n\t\t\tnoCalendar: this.getOption('noCalendar'),\r\n\t\t\tonChange: this.eventOnChange.bind(this),\r\n\t\t\tonClose: this.eventOnClose.bind(this),\r\n\t\t\tonOpen: this.eventOnOpen.bind(this),\r\n\t\t\tonReady: this.eventOnReady.bind(this),\r\n\t\t\tparseDate: this.getOption('parseDate'),\r\n\t\t\tprevArrow: this.getOption('prevArrow'),\r\n\t\t\tshorthandCurrentMonth: this.getOption('shorthandCurrentMonth'),\r\n\t\t\tstatic: this.getOption('static'),\r\n\t\t\ttime_24hr: this.getOption('time_24hr'),\r\n\t\t\tutc: this.getOption('utc'),\r\n\t\t\tweekNumbers: this.getOption('weekNumbers'),\r\n\t\t\twrap: this.getOption('wrap', true),\r\n\t\t};\r\n\r\n\t\t// Remove unset properties\r\n\t\tObject.keys( this.flatpickrOptions ).forEach( ( key: string ) => {\r\n\t\t\t(this.flatpickrOptions[key] === undefined) &&\r\n\t\t\t\tdelete this.flatpickrOptions[key];\r\n\t\t} );\r\n\r\n\t\tif (this.control) {\r\n\t\t\tthis.formControlListener = this.control.valueChanges\r\n\t\t\t\t.subscribe( ( value: any ) => {\r\n\t\t\t\t\tif ( !( value instanceof Date ) ) {\r\n\t\t\t\t\t\t// Quietly update the value of the form control to be a\r\n\t\t\t\t\t\t// Date object. This avoids any external subscribers\r\n\t\t\t\t\t\t// from being notified a second time (once for the user\r\n\t\t\t\t\t\t// initiated event, and once for our conversion to\r\n\t\t\t\t\t\t// Date()).\r\n\t\t\t\t\t\tthis.control.setValue( new Date( '' + value ), {\r\n\t\t\t\t\t\t\tonlySelf: true,\r\n\t\t\t\t\t\t\temitEvent: false,\r\n\t\t\t\t\t\t\temitModelToViewChange: false,\r\n\t\t\t\t\t\t\temitViewToModelChange: false\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Fire off the event emitter for the directive element, and also for the\r\n\t * global onChange callback, if defined.\r\n\t */\r\n\tprotected eventOnChange( selectedDates: Date[], dateStr: string, instance: Object ): void {\r\n\t\tlet event: FlatpickrEvent = {\r\n\t\t\tselectedDates: selectedDates,\r\n\t\t\tdateStr: dateStr,\r\n\t\t\tinstance: instance\r\n\t\t};\r\n\t\tif ( this.flatpickrOnChange ) {\r\n\t\t\tthis.flatpickrOnChange.emit( event );\r\n\t\t}\r\n\t\tif( this.globalOnChange ) {\r\n\t\t\tthis.globalOnChange( event );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Fire off the event emitter for the directive element, and also for the\r\n\t * global onClose callback, if defined.\r\n\t */\r\n\tprotected eventOnClose( selectedDates: Date[], dateStr: string, instance: Object ): void {\r\n\t\tlet event: FlatpickrEvent = {\r\n\t\t\tselectedDates: selectedDates,\r\n\t\t\tdateStr: dateStr,\r\n\t\t\tinstance: instance\r\n\t\t};\r\n\t\tif ( this.flatpickrOnClose ) {\r\n\t\t\tthis.flatpickrOnClose.emit( event );\r\n\t\t}\r\n\t\tif( this.globalOnClose ) {\r\n\t\t\tthis.globalOnClose( event );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Fire off the event emitter for the directive element, and also for the\r\n\t * global onOpen callback, if defined.\r\n\t */\r\n\tprotected eventOnOpen( selectedDates: Date[], dateStr: string, instance: Object ): void {\r\n\t\tlet event: FlatpickrEvent = {\r\n\t\t\tselectedDates: selectedDates,\r\n\t\t\tdateStr: dateStr,\r\n\t\t\tinstance: instance\r\n\t\t};\r\n\t\tif ( this.flatpickrOnOpen ) {\r\n\t\t\tthis.flatpickrOnOpen.emit( event );\r\n\t\t}\r\n\t\tif( this.globalOnOpen ) {\r\n\t\t\tthis.globalOnOpen( event );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Fire off the event emitter for the directive element, and also for the\r\n\t * global onReady callback, if defined.\r\n\t */\r\n\tprotected eventOnReady( selectedDates: Date[], dateStr: string, instance: Object ): void {\r\n\t\tlet event: FlatpickrEvent = {\r\n\t\t\tselectedDates: selectedDates,\r\n\t\t\tdateStr: dateStr,\r\n\t\t\tinstance: instance\r\n\t\t};\r\n\t\tif ( this.flatpickrOnReady ) {\r\n\t\t\tthis.flatpickrOnReady.emit( event );\r\n\t\t}\r\n\t\tif( this.globalOnReady ) {\r\n\t\t\tthis.globalOnReady( event );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Return the configuration value for option {option}, or {defaultValue} if it\r\n\t * doesn't exist.\r\n\t */\r\n\tprotected getOption( option: string, defaultValue?: any ): any {\r\n\t\tlet localName = 'flatpickr' + option.substring( 0, 1 ).toUpperCase()\r\n\t\t\t+ option.substring( 1 );\r\n\r\n\t\tif ( typeof this[localName] !== 'undefined' ) {\r\n\t\t\treturn this[localName];\r\n\t\t} else if ( typeof this.flatpickrOptions[option] !== 'undefined' ) {\r\n\t\t\treturn this.flatpickrOptions[option];\r\n\t\t} else {\r\n\t\t\treturn defaultValue;\r\n\t\t}\r\n\t}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Ng2FlatpickrComponent } from './ng2-flatpickr.component';\r\nimport { Ng2FlatpickrDirective } from './ng2-flatpickr.directive';\r\nimport 'flatpickr';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [\r\n        Ng2FlatpickrComponent,\r\n        Ng2FlatpickrDirective\r\n    ],\r\n    exports: [\r\n        Ng2FlatpickrComponent,\r\n        Ng2FlatpickrDirective\r\n    ]\r\n})\r\nexport class Ng2FlatpickrModule {\r\n}","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}